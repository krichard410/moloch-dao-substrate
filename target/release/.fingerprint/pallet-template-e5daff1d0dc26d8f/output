{"message":"can't find crate for `serde`","code":{"code":"E0463","explanation":"A plugin/crate was declared but cannot be found.\n\nErroneous code example:\n\n```compile_fail,E0463\n#![feature(plugin)]\n#![plugin(cookie_monster)] // error: can't find crate for `cookie_monster`\nextern crate cake_is_a_lie; // error: can't find crate for `cake_is_a_lie`\n```\n\nYou need to link your code to the relevant crate in order to be able to use it\n(through Cargo or the `-L` option of rustc example). Plugins are crates as\nwell, and you link to them the same way.\n"},"level":"error","spans":[{"file_name":"pallets/template/src/lib.rs","byte_start":2832,"byte_end":4083,"line_start":102,"line_end":132,"column_start":1,"column_end":2,"is_primary":true,"text":[{"text":"decl_storage! {","highlight_start":1,"highlight_end":16},{"text":"    trait Store for Module<T: Trait> as MolochTemplate {","highlight_start":1,"highlight_end":57},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tMembers get(fn members): Vec<Member>;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t// Proposals get(fn proposals): map hasher(blake2_128_concat) ProposalIndex => ProposalInfo<T::AccountId, T::BlockNumber>;","highlight_start":1,"highlight_end":125},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tProposalCount get(fn proposal_count): ProposalIndex;","highlight_start":1,"highlight_end":55},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tTokens get(fn tokens): map hasher(blake2_128_concat) TokenIndex => TokenCreation;","highlight_start":1,"highlight_end":84},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tTokenCount get(fn token_count): TokenIndex;","highlight_start":1,"highlight_end":46},{"text":"\t\t","highlight_start":1,"highlight_end":3},{"text":"\t \t//Balances get(fn get_balance): map hasher(blake2_128_concat) T::AccountId => u64;","highlight_start":1,"highlight_end":86},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        TotalSupply get(fn total_supply): u64 = 21000000;","highlight_start":1,"highlight_end":58},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tDidInit get(fn is_init): bool;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tVotingPeriod get(fn voting_period) config(): T::BlockNumber;","highlight_start":1,"highlight_end":63},{"text":"\t\tAbortWindow get(fn abort_window) config(): T::BlockNumber;","highlight_start":1,"highlight_end":61},{"text":"\t\tGracePeriod get(fn grace_period) config(): T::BlockNumber;","highlight_start":1,"highlight_end":61},{"text":"\t\tProposalFee get(fn proposal_fee) config(): BalanceOf<T>;","highlight_start":1,"highlight_end":59},{"text":"\t\tProposalBond get(fn proposal_bond) config(): BalanceOf<T>;","highlight_start":1,"highlight_end":61},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tProposals get(fn proposals): map hasher(blake2_128_concat) T::Hash => Proposal<T::Hash, T::AccountId, BalanceOf<T>, T::BlockNumber>; ","highlight_start":1,"highlight_end":136},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tProposalsFor get(fn proposals_for): map hasher(blake2_128_concat) T::AccountId => Vec<T::Hash>;","highlight_start":1,"highlight_end":98},{"text":"\t\tVotersFor get(fn voters_for): map hasher(blake2_128_concat) T::Hash => Vec<T::AccountId>;","highlight_start":1,"highlight_end":92},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":"can't find crate","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"pallets/template/src/lib.rs","byte_start":2832,"byte_end":4083,"line_start":102,"line_end":132,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"decl_storage! {","highlight_start":1,"highlight_end":16},{"text":"    trait Store for Module<T: Trait> as MolochTemplate {","highlight_start":1,"highlight_end":57},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tMembers get(fn members): Vec<Member>;","highlight_start":1,"highlight_end":40},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t// Proposals get(fn proposals): map hasher(blake2_128_concat) ProposalIndex => ProposalInfo<T::AccountId, T::BlockNumber>;","highlight_start":1,"highlight_end":125},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tProposalCount get(fn proposal_count): ProposalIndex;","highlight_start":1,"highlight_end":55},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tTokens get(fn tokens): map hasher(blake2_128_concat) TokenIndex => TokenCreation;","highlight_start":1,"highlight_end":84},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tTokenCount get(fn token_count): TokenIndex;","highlight_start":1,"highlight_end":46},{"text":"\t\t","highlight_start":1,"highlight_end":3},{"text":"\t \t//Balances get(fn get_balance): map hasher(blake2_128_concat) T::AccountId => u64;","highlight_start":1,"highlight_end":86},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        TotalSupply get(fn total_supply): u64 = 21000000;","highlight_start":1,"highlight_end":58},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tDidInit get(fn is_init): bool;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tVotingPeriod get(fn voting_period) config(): T::BlockNumber;","highlight_start":1,"highlight_end":63},{"text":"\t\tAbortWindow get(fn abort_window) config(): T::BlockNumber;","highlight_start":1,"highlight_end":61},{"text":"\t\tGracePeriod get(fn grace_period) config(): T::BlockNumber;","highlight_start":1,"highlight_end":61},{"text":"\t\tProposalFee get(fn proposal_fee) config(): BalanceOf<T>;","highlight_start":1,"highlight_end":59},{"text":"\t\tProposalBond get(fn proposal_bond) config(): BalanceOf<T>;","highlight_start":1,"highlight_end":61},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tProposals get(fn proposals): map hasher(blake2_128_concat) T::Hash => Proposal<T::Hash, T::AccountId, BalanceOf<T>, T::BlockNumber>; ","highlight_start":1,"highlight_end":136},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\tProposalsFor get(fn proposals_for): map hasher(blake2_128_concat) T::AccountId => Vec<T::Hash>;","highlight_start":1,"highlight_end":98},{"text":"\t\tVotersFor get(fn voters_for): map hasher(blake2_128_concat) T::Hash => Vec<T::AccountId>;","highlight_start":1,"highlight_end":92},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(self::sp_api_hidden_includes_decl_storage::hidden_include::Deserialize)]","def_site_span":{"file_name":"/Users/kirstenrichard/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.111/src/lib.rs","byte_start":2060,"byte_end":2283,"line_start":85,"line_end":90,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"pub fn derive_deserialize(input: TokenStream) -> TokenStream {","highlight_start":1,"highlight_end":1},{"text":"    let input = parse_macro_input!(input as DeriveInput);","highlight_start":1,"highlight_end":1},{"text":"    de::expand_derive_deserialize(&input)","highlight_start":1,"highlight_end":1},{"text":"        .unwrap_or_else(to_compile_errors)","highlight_start":1,"highlight_end":1},{"text":"        .into()","highlight_start":1,"highlight_end":1},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0463]\u001b[0m\u001b[0m\u001b[1m: can't find crate for `serde`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mpallets/template/src/lib.rs:102:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mdecl_storage! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    trait Store for Module<T: Trait> as MolochTemplate {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m104\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m105\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Members get(fn members): Vec<Member>;\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m132\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcan't find crate\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0463`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0463`.\u001b[0m\n"}
